/*

Boost Software License - Version 1.0 - August 17th, 2003

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.

*/
module derelict.sfml.graphics;

public
{
    import derelict.sfml.gtypes;
    import derelict.sfml.gfuncs;
}

private
{
    import derelict.util.loader;
}

class DerelictSFMLGraphicsLoader : SharedLibLoader
{
public:
    this()
    {
        super(
            "csfml-graphics.dll",
            "libcsfml-graphics.so,libcsfml-graphics.so.1.6",
            "../Frameworks/csfml-graphics.framework/csfml-graphics, /Library/Frameworks/csfml-graphics.framework/csfml-graphics, /System/Library/Frameworks/csfml-graphics.framework/csfml-graphics"
        );
    }

protected:
    override void loadSymbols()
    {
        // Color.h
        bindFunc(cast(void**)&sfColor_FromRGBA, "sfColor_FromRGBA");
        bindFunc(cast(void**)&sfColor_Add, "sfColor_Add");
        bindFunc(cast(void**)&sfColor_Modulate, "sfColor_Modulate");

        // Font.h
        bindFunc(cast(void**)&sfFont_Create, "sfFont_Create");
        bindFunc(cast(void**)&sfFont_CreateFromFile, "sfFont_CreateFromFile");
        bindFunc(cast(void**)&sfFont_CreateFromMemory, "sfFont_CreateFromMemory");
        bindFunc(cast(void**)&sfFont_Destroy, "sfFont_Destroy");
        bindFunc(cast(void**)&sfFont_GetCharacterSize, "sfFont_GetCharacterSize");
        bindFunc(cast(void**)&sfFont_GetDefaultFont, "sfFont_GetDefaultFont");

        // Image.h
        bindFunc(cast(void**)&sfImage_Create, "sfImage_Create");
        bindFunc(cast(void**)&sfImage_CreateFromColor, "sfImage_CreateFromColor");
        bindFunc(cast(void**)&sfImage_CreateFromFile, "sfImage_CreateFromFile");
        bindFunc(cast(void**)&sfImage_CreateFromMemory, "sfImage_CreateFromMemory");
        bindFunc(cast(void**)&sfImage_Destroy, "sfImage_Destroy");
        bindFunc(cast(void**)&sfImage_SaveToFile, "sfImage_SaveToFile");
        bindFunc(cast(void**)&sfImage_CreateMaskFromColor, "sfImage_CreateMaskFromColor");
        bindFunc(cast(void**)&sfImage_Copy, "sfImage_Copy");
        bindFunc(cast(void**)&sfImage_CopyScreen, "sfImage_CopyScreen");
        bindFunc(cast(void**)&sfImage_SetPixel, "sfImage_SetPixel");
        bindFunc(cast(void**)&sfImage_GetPixel, "sfImage_GetPixel");
        bindFunc(cast(void**)&sfImage_GetPixelsPtr, "sfImage_GetPixelsPtr");
        bindFunc(cast(void**)&sfImage_Bind, "sfImage_Bind");
        bindFunc(cast(void**)&sfImage_SetSmooth, "sfImage_SetSmooth");
        bindFunc(cast(void**)&sfImage_GetWidth, "sfImage_GetWidth");
        bindFunc(cast(void**)&sfImage_GetHeight, "sfImage_GetHeight");
        bindFunc(cast(void**)&sfImage_IsSmooth, "sfImage_IsSmooth");

        // PostFX.h
        bindFunc(cast(void**)&sfPostFX_CreateFromFile, "sfPostFX_CreateFromFile");
        bindFunc(cast(void**)&sfPostFX_CreateFromMemory, "sfPostFX_CreateFromMemory");
        bindFunc(cast(void**)&sfPostFX_Destroy, "sfPostFX_Destroy");
        bindFunc(cast(void**)&sfPostFX_SetParameter1, "sfPostFX_SetParameter1");
        bindFunc(cast(void**)&sfPostFX_SetParameter2, "sfPostFX_SetParameter2");
        bindFunc(cast(void**)&sfPostFX_SetParameter3, "sfPostFX_SetParameter3");
        bindFunc(cast(void**)&sfPostFX_SetParameter4, "sfPostFX_SetParameter4");
        bindFunc(cast(void**)&sfPostFX_SetTexture, "sfPostFX_SetTexture");
        bindFunc(cast(void**)&sfPostFX_CanUsePostFX, "sfPostFX_CanUsePostFX");

        // Rect.h
        bindFunc(cast(void**)&sfFloatRect_Offset, "sfFloatRect_Offset");
        bindFunc(cast(void**)&sfIntRect_Offset, "sfIntRect_Offset");
        bindFunc(cast(void**)&sfFloatRect_Contains, "sfFloatRect_Contains");
        bindFunc(cast(void**)&sfIntRect_Contains, "sfIntRect_Contains");
        bindFunc(cast(void**)&sfFloatRect_Intersects, "sfFloatRect_Intersects");
        bindFunc(cast(void**)&sfIntRect_Intersects, "sfIntRect_Intersects");

        // RenderWindow.h
        bindFunc(cast(void**)&sfRenderWindow_Create, "sfRenderWindow_Create");
        bindFunc(cast(void**)&sfRenderWindow_CreateFromHandle, "sfRenderWindow_CreateFromHandle");
        bindFunc(cast(void**)&sfRenderWindow_Destroy, "sfRenderWindow_Destroy");
        bindFunc(cast(void**)&sfRenderWindow_Close, "sfRenderWindow_Close");
        bindFunc(cast(void**)&sfRenderWindow_IsOpened, "sfRenderWindow_IsOpened");
        bindFunc(cast(void**)&sfRenderWindow_GetWidth, "sfRenderWindow_GetWidth");
        bindFunc(cast(void**)&sfRenderWindow_GetHeight, "sfRenderWindow_GetHeight");
        bindFunc(cast(void**)&sfRenderWindow_GetSettings, "sfRenderWindow_GetSettings");
        bindFunc(cast(void**)&sfRenderWindow_GetEvent, "sfRenderWindow_GetEvent");
        bindFunc(cast(void**)&sfRenderWindow_UseVerticalSync, "sfRenderWindow_UseVerticalSync");
        bindFunc(cast(void**)&sfRenderWindow_ShowMouseCursor, "sfRenderWindow_ShowMouseCursor");
        bindFunc(cast(void**)&sfRenderWindow_SetCursorPosition, "sfRenderWindow_SetCursorPosition");
        bindFunc(cast(void**)&sfRenderWindow_SetPosition, "sfRenderWindow_SetPosition");
        bindFunc(cast(void**)&sfRenderWindow_SetSize, "sfRenderWindow_SetSize");
        bindFunc(cast(void**)&sfRenderWindow_Show, "sfRenderWindow_Show");
        bindFunc(cast(void**)&sfRenderWindow_EnableKeyRepeat, "sfRenderWindow_EnableKeyRepeat");
        bindFunc(cast(void**)&sfRenderWindow_SetIcon, "sfRenderWindow_SetIcon");
        bindFunc(cast(void**)&sfRenderWindow_SetActive, "sfRenderWindow_SetActive");
        bindFunc(cast(void**)&sfRenderWindow_Display, "sfRenderWindow_Display");
        bindFunc(cast(void**)&sfRenderWindow_GetInput, "sfRenderWindow_GetInput");
        bindFunc(cast(void**)&sfRenderWindow_SetFramerateLimit, "sfRenderWindow_SetFramerateLimit");
        bindFunc(cast(void**)&sfRenderWindow_GetFrameTime, "sfRenderWindow_GetFrameTime");
        bindFunc(cast(void**)&sfRenderWindow_SetJoystickThreshold, "sfRenderWindow_SetJoystickThreshold");
        bindFunc(cast(void**)&sfRenderWindow_DrawPostFX, "sfRenderWindow_DrawPostFX");
        bindFunc(cast(void**)&sfRenderWindow_DrawSprite, "sfRenderWindow_DrawSprite");
        bindFunc(cast(void**)&sfRenderWindow_DrawShape, "sfRenderWindow_DrawShape");
        bindFunc(cast(void**)&sfRenderWindow_DrawString, "sfRenderWindow_DrawString");
        bindFunc(cast(void**)&sfRenderWindow_Capture, "sfRenderWindow_Capture");
        bindFunc(cast(void**)&sfRenderWindow_Clear, "sfRenderWindow_Clear");
        bindFunc(cast(void**)&sfRenderWindow_SetView, "sfRenderWindow_SetView");
        bindFunc(cast(void**)&sfRenderWindow_GetView, "sfRenderWindow_GetView");
        bindFunc(cast(void**)&sfRenderWindow_GetDefaultView, "sfRenderWindow_GetDefaultView");
        bindFunc(cast(void**)&sfRenderWindow_ConvertCoords, "sfRenderWindow_ConvertCoords");
        bindFunc(cast(void**)&sfRenderWindow_PreserveOpenGLStates, "sfRenderWindow_PreserveOpenGLStates");

        // Shape.h
        bindFunc(cast(void**)&sfShape_CreateLine, "sfShape_CreateLine");
        bindFunc(cast(void**)&sfShape_CreateRectangle, "sfShape_CreateRectangle");
        bindFunc(cast(void**)&sfShape_CreateCircle, "sfShape_CreateCircle");
        bindFunc(cast(void**)&sfShape_Destroy, "sfShape_Destroy");
        bindFunc(cast(void**)&sfShape_SetX, "sfShape_SetX");
        bindFunc(cast(void**)&sfShape_SetY, "sfShape_SetY");
        bindFunc(cast(void**)&sfShape_SetPosition, "sfShape_SetPosition");
        bindFunc(cast(void**)&sfShape_SetScaleX, "sfShape_SetScaleX");
        bindFunc(cast(void**)&sfShape_SetScaleY, "sfShape_SetScaleY");
        bindFunc(cast(void**)&sfShape_SetScale, "sfShape_SetScale");
        bindFunc(cast(void**)&sfShape_SetRotation, "sfShape_SetRotation");
        bindFunc(cast(void**)&sfShape_SetCenter, "sfShape_SetCenter");
        bindFunc(cast(void**)&sfShape_SetColor, "sfShape_SetColor");
        bindFunc(cast(void**)&sfShape_SetBlendMode, "sfShape_SetBlendMode");
        bindFunc(cast(void**)&sfShape_GetX, "sfShape_GetX");
        bindFunc(cast(void**)&sfShape_GetY, "sfShape_GetY");
        bindFunc(cast(void**)&sfShape_GetScaleX, "sfShape_GetScaleX");
        bindFunc(cast(void**)&sfShape_GetScaleY, "sfShape_GetScaleY");
        bindFunc(cast(void**)&sfShape_GetRotation, "sfShape_GetRotation");
        bindFunc(cast(void**)&sfShape_GetCenterX, "sfShape_GetCenterX");
        bindFunc(cast(void**)&sfShape_GetCenterY, "sfShape_GetCenterY");
        bindFunc(cast(void**)&sfShape_GetColor, "sfShape_GetColor");
        bindFunc(cast(void**)&sfShape_GetBlendMode, "sfShape_GetBlendMode");
        bindFunc(cast(void**)&sfShape_Move, "sfShape_Move");
        bindFunc(cast(void**)&sfShape_Scale, "sfShape_Scale");
        bindFunc(cast(void**)&sfShape_Rotate, "sfShape_Rotate");
        bindFunc(cast(void**)&sfShape_TransformToLocal, "sfShape_TransformToLocal");
        bindFunc(cast(void**)&sfShape_TransformToGlobal, "sfShape_TransformToGlobal");
        bindFunc(cast(void**)&sfShape_AddPoint, "sfShape_AddPoint");
        bindFunc(cast(void**)&sfShape_EnableFill, "sfShape_EnableFill");
        bindFunc(cast(void**)&sfShape_EnableOutline, "sfShape_EnableOutline");
        bindFunc(cast(void**)&sfShape_SetOutlineWidth, "sfShape_SetOutlineWidth");
        bindFunc(cast(void**)&sfShape_GetOutlineWidth, "sfShape_GetOutlineWidth");
        bindFunc(cast(void**)&sfShape_GetNbPoints, "sfShape_GetNbPoints");
        bindFunc(cast(void**)&sfShape_GetPointPosition, "sfShape_GetPointPosition");
        bindFunc(cast(void**)&sfShape_GetPointColor, "sfShape_GetPointColor");
        bindFunc(cast(void**)&sfShape_GetPointOutlineColor, "sfShape_GetPointOutlineColor");
        bindFunc(cast(void**)&sfShape_SetPointPosition, "sfShape_SetPointPosition");
        bindFunc(cast(void**)&sfShape_SetPointColor, "sfShape_SetPointColor");
        bindFunc(cast(void**)&sfShape_SetPointOutlineColor, "sfShape_SetPointOutlineColor");

        // Sprite.h
        bindFunc(cast(void**)&sfSprite_Create, "sfSprite_Create");
        bindFunc(cast(void**)&sfSprite_Destroy, "sfSprite_Destroy");
        bindFunc(cast(void**)&sfSprite_SetX, "sfSprite_SetX");
        bindFunc(cast(void**)&sfSprite_SetY, "sfSprite_SetY");
        bindFunc(cast(void**)&sfSprite_SetPosition, "sfSprite_SetPosition");
        bindFunc(cast(void**)&sfSprite_SetScaleX, "sfSprite_SetScaleX");
        bindFunc(cast(void**)&sfSprite_SetScaleY, "sfSprite_SetScaleY");
        bindFunc(cast(void**)&sfSprite_SetScale, "sfSprite_SetScale");
        bindFunc(cast(void**)&sfSprite_SetRotation, "sfSprite_SetRotation");
        bindFunc(cast(void**)&sfSprite_SetCenter, "sfSprite_SetCenter");
        bindFunc(cast(void**)&sfSprite_SetColor, "sfSprite_SetColor");
        bindFunc(cast(void**)&sfSprite_SetBlendMode, "sfSprite_SetBlendMode");
        bindFunc(cast(void**)&sfSprite_GetX, "sfSprite_GetX");
        bindFunc(cast(void**)&sfSprite_GetY, "sfSprite_GetY");
        bindFunc(cast(void**)&sfSprite_GetScaleX, "sfSprite_GetScaleX");
        bindFunc(cast(void**)&sfSprite_GetScaleY, "sfSprite_GetScaleY");
        bindFunc(cast(void**)&sfSprite_GetRotation, "sfSprite_GetRotation");
        bindFunc(cast(void**)&sfSprite_GetCenterX, "sfSprite_GetCenterX");
        bindFunc(cast(void**)&sfSprite_GetCenterY, "sfSprite_GetCenterY");
        bindFunc(cast(void**)&sfSprite_GetColor, "sfSprite_GetColor");
        bindFunc(cast(void**)&sfSprite_GetBlendMode, "sfSprite_GetBlendMode");
        bindFunc(cast(void**)&sfSprite_Move, "sfSprite_Move");
        bindFunc(cast(void**)&sfSprite_Scale, "sfSprite_Scale");
        bindFunc(cast(void**)&sfSprite_Rotate, "sfSprite_Rotate");
        bindFunc(cast(void**)&sfSprite_TransformToLocal, "sfSprite_TransformToLocal");
        bindFunc(cast(void**)&sfSprite_TransformToGlobal, "sfSprite_TransformToGlobal");
        bindFunc(cast(void**)&sfSprite_SetImage, "sfSprite_SetImage");
        bindFunc(cast(void**)&sfSprite_SetSubRect, "sfSprite_SetSubRect");
        bindFunc(cast(void**)&sfSprite_Resize, "sfSprite_Resize");
        bindFunc(cast(void**)&sfSprite_FlipX, "sfSprite_FlipX");
        bindFunc(cast(void**)&sfSprite_FlipY, "sfSprite_FlipY");
        bindFunc(cast(void**)&sfSprite_GetImage, "sfSprite_GetImage");
        bindFunc(cast(void**)&sfSprite_GetSubRect, "sfSprite_GetSubRect");
        bindFunc(cast(void**)&sfSprite_GetWidth, "sfSprite_GetWidth");
        bindFunc(cast(void**)&sfSprite_GetHeight, "sfSprite_GetHeight");
        bindFunc(cast(void**)&sfSprite_GetPixel, "sfSprite_GetPixel");

        // String.h
        bindFunc(cast(void**)&sfString_Create, "sfString_Create");
        bindFunc(cast(void**)&sfString_Destroy, "sfString_Destroy");
        bindFunc(cast(void**)&sfString_SetX, "sfString_SetX");
        bindFunc(cast(void**)&sfString_SetY, "sfString_SetY");
        bindFunc(cast(void**)&sfString_SetPosition, "sfString_SetPosition");
        bindFunc(cast(void**)&sfString_SetScaleX, "sfString_SetScaleX");
        bindFunc(cast(void**)&sfString_SetScaleY, "sfString_SetScaleY");
        bindFunc(cast(void**)&sfString_SetScale, "sfString_SetScale");
        bindFunc(cast(void**)&sfString_SetRotation, "sfString_SetRotation");
        bindFunc(cast(void**)&sfString_SetCenter, "sfString_SetCenter");
        bindFunc(cast(void**)&sfString_SetColor, "sfString_SetColor");
        bindFunc(cast(void**)&sfString_SetBlendMode, "sfString_SetBlendMode");
        bindFunc(cast(void**)&sfString_GetX, "sfString_GetX");
        bindFunc(cast(void**)&sfString_GetY, "sfString_GetY");
        bindFunc(cast(void**)&sfString_GetScaleX, "sfString_GetScaleX");
        bindFunc(cast(void**)&sfString_GetScaleY, "sfString_GetScaleY");
        bindFunc(cast(void**)&sfString_GetRotation, "sfString_GetRotation");
        bindFunc(cast(void**)&sfString_GetCenterX, "sfString_GetCenterX");
        bindFunc(cast(void**)&sfString_GetCenterY, "sfString_GetCenterY");
        bindFunc(cast(void**)&sfString_GetColor, "sfString_GetColor");
        bindFunc(cast(void**)&sfString_GetBlendMode, "sfString_GetBlendMode");
        bindFunc(cast(void**)&sfString_Move, "sfString_Move");
        bindFunc(cast(void**)&sfString_Scale, "sfString_Scale");
        bindFunc(cast(void**)&sfString_Rotate, "sfString_Rotate");
        bindFunc(cast(void**)&sfString_TransformToLocal, "sfString_TransformToLocal");
        bindFunc(cast(void**)&sfString_TransformToGlobal, "sfString_TransformToGlobal");
        bindFunc(cast(void**)&sfString_SetText, "sfString_SetText");
        bindFunc(cast(void**)&sfString_SetUnicodeText, "sfString_SetUnicodeText");
        bindFunc(cast(void**)&sfString_SetFont, "sfString_SetFont");
        bindFunc(cast(void**)&sfString_SetSize, "sfString_SetSize");
        bindFunc(cast(void**)&sfString_SetStyle, "sfString_SetStyle");
        bindFunc(cast(void**)&sfString_GetUnicodeText, "sfString_GetUnicodeText");
        bindFunc(cast(void**)&sfString_GetText, "sfString_GetText");
        bindFunc(cast(void**)&sfString_GetFont, "sfString_GetFont");
        bindFunc(cast(void**)&sfString_GetSize, "sfString_GetSize");
        bindFunc(cast(void**)&sfString_GetStyle, "sfString_GetStyle");
        bindFunc(cast(void**)&sfString_GetCharacterPos, "sfString_GetCharacterPos");
        bindFunc(cast(void**)&sfString_GetRect, "sfString_GetRect");

        // View.h
        bindFunc(cast(void**)&sfView_Create, "sfView_Create");
        bindFunc(cast(void**)&sfView_CreateFromRect, "sfView_CreateFromRect");
        bindFunc(cast(void**)&sfView_Destroy, "sfView_Destroy");
        bindFunc(cast(void**)&sfView_SetCenter, "sfView_SetCenter");
        bindFunc(cast(void**)&sfView_SetHalfSize, "sfView_SetHalfSize");
        bindFunc(cast(void**)&sfView_SetFromRect, "sfView_SetFromRect");
        bindFunc(cast(void**)&sfView_GetCenterX, "sfView_GetCenterX");
        bindFunc(cast(void**)&sfView_GetCenterY, "sfView_GetCenterY");
        bindFunc(cast(void**)&sfView_GetHalfSizeX, "sfView_GetHalfSizeX");
        bindFunc(cast(void**)&sfView_GetHalfSizeY, "sfView_GetHalfSizeY");
        bindFunc(cast(void**)&sfView_GetRect, "sfView_GetRect");
        bindFunc(cast(void**)&sfView_Move, "sfView_Move");
        bindFunc(cast(void**)&sfView_Zoom, "sfView_Zoom");
    }
}

DerelictSFMLGraphicsLoader DerelictSFMLGraphics;

static this()
{
    DerelictSFMLGraphics = new DerelictSFMLGraphicsLoader();
}

static ~this()
{
    if(SharedLibLoader.isAutoUnloadEnabled())
        DerelictSFMLGraphics.unload();
}